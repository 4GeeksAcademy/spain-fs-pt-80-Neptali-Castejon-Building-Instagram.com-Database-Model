# A generic, single database configuration.

[alembic]
# Path to migration scripts (use forward slashes for OS-agnostic paths)
script_location = alembic

# Template for migration file names
# Uncomment to include timestamp in file names
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Add directory to sys.path (defaults to the current working directory)
prepend_sys_path = .

# Timezone to use for rendering dates in migration files
# timezone =

# Truncate length of the "slug" field in migration filenames
# truncate_slug_length = 40

# Run environment during 'revision' command if true
# revision_environment = false

# Allow .pyc/.pyo files without a source .py file as revisions
# sourceless = false

# Directory for version files (default: alembic/versions)
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# Path separator for version_locations (default: os.pathsep)
version_path_separator = os

# Search for source files recursively in version_locations
# recursive_version_locations = false

# Output encoding for revision files
# output_encoding = utf-8

# SQLAlchemy database URL (update with actual driver and credentials)
sqlalchemy.url = sqlite:///example.db  # Replace with your actual connection string

[post_write_hooks]
# Define scripts or Python functions to run on new revision scripts
# Example: format with "black"
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Example: lint and fix with "ruff"
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
